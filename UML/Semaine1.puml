@startuml

package view{

}


package model{


    class Position{
        -m_x : Integer
        -m_y : Integer
        +<<Create>>Position()
        +<<Create>>Position(x : Integer, y : Integer)
        +setPositionX(x : Integer)
        +setPositionY(y : Integer)
        +getPositionX() : Integer
        +getPositionY() : Integer
    }

    abstract Tuile{
        #m_position : Position
        #m_objectif : Objectif
        #m_haut : Boolean
        #m_droite : Boolean
        #m_bas : Boolean
        #m_gauche : Boolean
        +<<Create>>Tuile()
        +getPositionTuile() : Position
        +getObjectifTuile() : Objectif
        +getOuverturesTuile() :Boolean[4]
        +{abstract}rotate()

    }
    class TuileAngle extends Tuile{
        +<<Create>>TuileAngle()
        +<<Create>>TuileAngle(objectif : Objectif)
        +rotate()
    }
    class TuileDroite extends Tuile{
        +<<Create>>TuileDroite()
        +<<Create>>TuileDroite(objectif : Objectif)
        +getTypeTuile() : TypeTuile
        +rotate()

    }
    class TuileT extends Tuile{
        +<<Create>>TuileT()
        +<<Create>>TuileT(objectif : Objectif)
        +rotate()
    }
    class TuileFactory{
    }


    class Objectif
    {
        -m_lstPath : String
        +<<Create>> Objectif()
        +<<Create>> Objectif(path : String)
    }



    class Joueur{}

    class Plateau{}

    class Carte{}



}

package contoller{

}






@enduml